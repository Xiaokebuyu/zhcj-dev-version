# Nginx配置文件 - Vue应用集成AI助手
# 假设：
# - Vue应用部署在 /var/www/vue-app
# - Next.js应用部署在 http://localhost:3000 (或其他端口)
# - 主域名: example.com

# 上游服务器配置
upstream nextjs_app {
    server 127.0.0.1:3000;  # Next.js应用地址
    keepalive 32;
}

# 主服务器配置
server {
    listen 80;
    server_name example.com www.example.com;  # 替换为你的域名
    
    # 安全头部
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # 启用gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Vue应用主路由（静态文件服务）
    location / {
        root /var/www/vue-app;  # Vue构建后的dist目录
        index index.html;
        try_files $uri $uri/ /index.html;  # SPA路由支持
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # HTML文件不缓存
        location ~* \.html$ {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }

    # AI助手相关路由 - 代理到Next.js应用
    location /api/embed.js {
        proxy_pass http://nextjs_app/api/embed.js;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 🔧 添加认证头部传递
        proxy_set_header ada_token $http_ada_token;
        proxy_set_header satoken $http_satoken;
        proxy_set_header Authorization $http_authorization;
        
        # CORS头部
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,ada_token,satoken" always;
        
        # 缓存策略
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # AI助手embed页面
    location /embed {
        proxy_pass http://nextjs_app/embed;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 🔧 添加认证头部传递
        proxy_set_header ada_token $http_ada_token;
        proxy_set_header satoken $http_satoken;
        proxy_set_header Authorization $http_authorization;
        
        # 允许iframe嵌入
        add_header X-Frame-Options "ALLOWALL" always;
    }

    # AI助手API路由
    location /api/ {
        proxy_pass http://nextjs_app/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 🔧 关键修复：传递自定义认证头部
        proxy_set_header ada_token $http_ada_token;
        proxy_set_header satoken $http_satoken;
        proxy_set_header Authorization $http_authorization;
        
        # CORS头部
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,ada_token,satoken" always;
        
        # 处理OPTIONS预检请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,ada_token,satoken";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # WebSocket支持（用于语音通话功能）
    location /api/voice/realtime {
        proxy_pass http://nextjs_app/api/voice/realtime;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket特定设置
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # 健康检查
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 日志配置
    access_log /var/log/nginx/vue_ai_assistant.access.log;
    error_log /var/log/nginx/vue_ai_assistant.error.log;
}

# HTTPS配置（推荐使用SSL）
server {
    listen 443 ssl http2;
    server_name example.com www.example.com;  # 替换为你的域名
    
    # SSL证书配置（需要替换为实际证书路径）
    ssl_certificate /path/to/your/cert.pem;
    ssl_certificate_key /path/to/your/private.key;
    
    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # 复用HTTP配置
    include /etc/nginx/sites-available/vue-ai-assistant-http.conf;
}

# HTTP重定向到HTTPS
server {
    listen 80;
    server_name example.com www.example.com;
    return 301 https://$server_name$request_uri;
} 